	driver.findElement(By.xpath("//a[@id='menu-toggle']")).click();
    	driver.findElement(By.xpath("//li/a[text()='Login']")).click();
    	driver.findElement(By.id("txt-username")).sendKeys("John Doe");
    	driver.findElement(By.id("txt-password")).sendKeys("ThisIsNotAPassword");
    	driver.findElement(By.cssSelector(".btn.btn-default")).click();
    	
    	
//    	driver.findElement(By.id("btn-make-appointment")).click();
    	WebElement facility =driver.findElement(By.id("combo_facility"));
    	Select sc = new Select(facility);
    	sc.selectByValue("Seoul CURA Healthcare Center");
    	driver.findElement(By.id("chk_hospotal_readmission")).click();
    	driver.findElement(By.id("radio_program_medicaid")).click();
    	
    	//calender
    	driver.findElement(By.id("txt_visit_date")).click();
    	
    	while(true) {
    		//month year select
    		String monthYear=driver.findElement(By.xpath("//*[@class='datepicker-days'] //tr/th[@class='datepicker-switch']")).getText();
    		if(monthYear.equals(ConstantsHelper.month)) {
    			break;
    		}
    		else {
    			// click next if current year, month not matches
    			driver.findElement(By.cssSelector(".datepicker-days .next")).click();
    		}
    		
    	}
    	//select date
    	List<WebElement> days= driver.findElements(By.xpath("//*[@class='datepicker-days'] //td[@class='day']"));
    	WebElement day =days.stream().filter(s->s.getText().equals(ConstantsHelper.date)).findFirst().orElse(null);
    	day.click();
    	//enter comments
    	Actions a = new Actions(driver);
    	WebElement CommentBoxLocation = driver.findElement(By.id("txt_comment"));
    	a.sendKeys(CommentBoxLocation, "My country is India").build().perform();
    	//click appoiment
    	driver.findElement(By.id("btn-book-appointment")).click();
    	String ConfirmationText =driver.findElement(By.xpath("//div[@class='col-xs-12 text-center']/h2")).getText();
    	Assert.assertEquals("Appointment Confirmation", ConfirmationText);
    	
    	
    	<build>
		<pluginManagement><!-- lock down plugins versions to avoid using Maven 
				defaults (may be moved to parent pom) -->
			<plugins>
				<!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>3.1.0</version>
				</plugin>
				<!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
				</plugin>
				<plugin>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.0.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.8.2</version>
				</plugin>
				<!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
				<plugin>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.7.1</version>
				</plugin>
				<plugin>
					<artifactId>maven-project-info-reports-plugin</artifactId>
					<version>3.0.0</version>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>